{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "title": "ACMEServer.ADCS Configuration Schema",
  "description": "Schema for validating the appsettings.Production.json configuration file for ACMEServer.ADCS.",
  "type": "object",
  "properties": {
    "AcmeFileStore": {
      "type": "object",
      "required": [
        "BasePath"
      ],
      "additionalProperties": false,
      "properties": {
        "BasePath": {
          "type": "string",
          "description": "The file system path where ACME data is stored. Make sure the path exists and is writeable from the ACME server process identity."
        }
      }
    },
    "AcmeServer": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CAAIdentities": {
          "type": "array",
          "description": "List of CAA identities to include in the ACME server metadata. If empty or not set, no CAA records will be included.",
          "items": {
            "type": "string"
          }
        },
        "HostedWorkers": {
          "type": "object",
          "properties": {
            "ValidationCheckInterval": {
              "type": "number",
              "description": "Interval in seconds. Challenge validation will check for work after this period."
            },
            "IssuanceCheckInterval": {
              "type": "number",
              "description": "Interval in seconds. Certificate issuance will check for work after this period."
            }
          }
        },
        "WebsiteUrl": {
          "type": "string",
          "description": "This URL is included in the metadata for human reference."
        },
        "TOS": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "RequireAgreement": {
              "type": "boolean",
              "description": "For internal use most likely 'false'. Indicates if users must agree to the Terms of Service."
            },
            "Url": {
              "type": "string",
              "description": "The Terms of Service URL included in the ACME metadata and error messages."
            },
            "LastUpdate": {
              "type": "string",
              "format": "date",
              "description": "TOS agreement is time-based and must be repeated if TOS changes. The date and time when the Terms of Service were last updated."
            }
          }
        },
        "ExternalAccountBinding": {
          "type": "object",
          "additionalProperties": false,
          "description": "If the ACME server supports external account binding (EAB), additional services will be configured to support the scenario.",
          "properties": {
            "Required": {
              "type": "boolean",
              "description": "If false, EAB is optional for account creation. Indicates if EAB is required for account creation."
            },
            "MACRetrievalUrl": {
              "type": "string",
              "description": "URL to retrieve the MAC key for a given {kid}. Include {kid} as placeholder (e.g., https://myEABService.example.com/mac/{kid}).",
              "pattern": "^https?://.*\\{kid\\}.*"
            },
            "SuccessSignalUrl": {
              "type": "string",
              "description": "URL to signal successful EAB check. Include {kid} as placeholder (e.g., https://myEABService.example.com/success/{kid}).",
              "pattern": "^https?://.*\\{kid\\}.*"
            },
            "FailedSignalUrl": {
              "type": "string",
              "description": "URL to signal failed EAB check. Include {kid} as placeholder (e.g., https://myEABService.example.com/failed/{kid}).",
              "pattern": "^https?://.*\\{kid\\}.*"
            },
            "Headers": {
              "type": "array",
              "description": "HTTP headers to be sent to the MAC-related URLs.",
              "items": {
                "type": "object",
                "properties": {
                  "Key": {
                    "type": "string",
                    "description": "The name of the header."
                  },
                  "Value": {
                    "type": "string",
                    "description": "The value of the header."
                  }
                },
                "required": [
                  "Key",
                  "Value"
                ]
              }
            }
          },
          "required": [
            "Required",
            "MACRetrievalUrl"
          ]
        }
      },
      "Profiles": {
        "type": "object",
        "description": "Issuance profile configuration. There is no default profile; you must define at least one. The profile name is used to identify the profile in the ACME server. You may choose any arbitrary name that contains only alphanumeric characters, dashes, and underscores.",
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "SupportedIdentifiers": {
              "type": "array",
              "items": {
                "enum": [
                  "dns",
                  "ip",
                  "permanent-identifier",
                  "hardware-module"
                ]
              },
              "description": "List of supported identifiers for this profile. Possible values are: dns, ip, permanent-identifier, hardware-module.",
              "minItems": 1
            },
            "ADCSOptions": {
              "type": "object",
              "additionalProperties": false,
              "description": "Settings used to issue the certificate.",
              "properties": {
                "CAServer": {
                  "type": "string",
                  "description": "The CA server to use for certificate issuance."
                },
                "TemplateName": {
                  "type": "string",
                  "description": "The template to use for certificate issuance."
                }
              }
            },
            "AuthorizationValidityPeriod": {
              "type": "string",
              "format": "time",
              "description": "The validity period of the authorization challenge. The default is one day. After this period, the authorization will be invalid and a new challenge must be requested."
            },
            "RequireExternalAccountBinding": {
              "type": "boolean",
              "description": "If true, external account binding is required to use this profile. The default is false."
            },
            "IdentifierValidation": {
              "type": "object",
              "description": "Settings used to validate the identifiers. Validation runs during profile selection and can be used to restrict the identifiers that can be used with this profile.",
              "properties": {
                "DNS": {
                  "type": "object",
                  "description": "Configure DNS identifier validation.",
                  "properties": {
                    "AllowedDNSNames": {
                      "type": "array",
                      "description": "AllowedDNSNames restricts the DNS names. It's an endsWith case-insensitive match. 'example.com' allows *.example.com and example.com, '.example.com' allows *.example.com but not example.com. The default is an empty string, so no restriction.",
                      "items": { "type": "string" }
                    }
                  }
                },
                "IP": {
                  "type": "object",
                  "description": "Configure IP identifier validation.",
                  "properties": {
                    "AllowedIPNetworks": {
                      "type": "array",
                      "description": "AllowedIPAddresses restricts the IP addresses. Use CIDR notation, e.g., ::1/128 or 127.0.0.1/32. The default is ::0/0 and 0.0.0.0/0, so no restriction.",
                      "items": { "type": "string" }
                    }
                  }
                },
                "PermanentIdentifier": {
                  "type": "object",
                  "description": "Configure permanent-identifier validation.",
                  "properties": {
                    "ValidationRegex": {
                      "type": "string",
                      "description": "ValidationRegex restricts the permanent identifiers. The default is .* so no restriction."
                    }
                  }
                }
              }
            },
            "ChallengeValidation": {
              "type": "object",
              "description": "Settings used to configure challenge validation.",
              "properties": {
                "DeviceAttest01": {
                  "type": "object",
                  "description": "Configuration for device-attest-01 challenges.",
                  "properties": {
                    "RemoteValidationUrl": {
                      "type": [ "string", "null" ],
                      "description": "Enables remote validation of device-attest-01 challenges. This feature is experimental and may change in the future."
                    },
                    "Apple": {
                      "type": "object",
                      "description": "Configuration for Apple type device-attest-01 challenges.",
                      "properties": {
                        "RootCertificates": {
                          "type": "array",
                          "description": "The root certificate for Apple device-attest-01 challenges. The default is the Apple enterprise root attestation certificate from https://www.apple.com/certificateauthority/private/.",
                          "items": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            },
            "CSRValidation": {
              "type": "object",
              "description": "Settings used to configure the validations of the certificate signing request.",
              "properties": {
                "SANValidationParameters": {
                  "type": "object",
                  "description": "Additional rules for SAN during CSR validation. This is used to allow SANs that would normally be rejected by the ACME protocol, e.g., because there's no matching identifier in the order. Use with care!",
                  "properties": {
                    "RemoteValidationUrl": {
                      "type": [ "string", "null" ],
                      "description": "If set, the ACME-ADCS server will call this URL to validate the SANs."
                    },
                    "DnsName": {
                      "type": "object",
                      "description": "Additional rules for DnsName SANs.",
                      "properties": {
                        "ValidationRegex": {
                          "type": [ "string", "null" ],
                          "description": "DNS names will be considered valid if they match the following regular expression. Be aware of JSON escaping, e.g., \\.example\\.com$ for a regex that matches all subdomains of example.com."
                        }
                      }
                    },
                    "IPAddress": {
                      "type": "object",
                      "description": "Additional rules for IPAddress SANs.",
                      "properties": {
                        "ValidNetworks": {
                          "type": "array",
                          "description": "IP addresses will be considered valid if they are part of the following networks. Use CIDR notation, e.g., ::1/128 or 127.0.0.1/32.",
                          "items": { "type": "string" }
                        }
                      }
                    },
                    "URI": {
                      "type": "object",
                      "description": "Additional rules for URI SANs.",
                      "properties": {
                        "ValidationRegex": {
                          "type": [ "string", "null" ],
                          "description": "URIs will be considered valid if they match the following regular expression. Be aware of JSON escaping, e.g., \\.example\\.com$ for a regex that matches all subdomains of example.com."
                        }
                      }
                    },
                    "Rfc822Name": {
                      "type": "object",
                      "description": "Additional rules for Rfc822Name SANs.",
                      "properties": {
                        "ValidationRegex": {
                          "type": [ "string", "null" ],
                          "description": "URIs will be considered valid if they match the following regular expression. Be aware of JSON escaping, e.g., \\.example\\.com$ for a regex that matches all subdomains of example.com."
                        }
                      }
                    },
                    "RegisteredId": {
                      "type": "object",
                      "description": "Additional rules for RegisteredId SANs.",
                      "properties": {
                        "ValidationRegex": {
                          "type": [ "string", "null" ],
                          "description": "URIs will be considered valid if they match the following regular expression. Be aware of JSON escaping, e.g., \\.example\\.com$ for a regex that matches all subdomains of example.com."
                        }
                      }
                    },
                    "OtherName": {
                      "type": "object",
                      "description": "Additional rules for OtherName SANs. Some otherName SAN types are parsed and have special handling, e.g., permanent-identifier and hardware-module.",
                      "properties": {
                        "PermanentIdentifier": {
                          "type": "object",
                          "description": "If set, the ACME-ADCS server will use this to validate id-on-permanentIdentifier [RFC4043].",
                          "properties": {
                            "ValidValueRegex": {
                              "type": [ "string", "null" ],
                              "description": "Permanent identifiers will be considered valid if they match the following regular expression."
                            },
                            "ValidAssignerRegex": {
                              "type": [ "string", "null" ],
                              "description": "If set, the assigner will be validated against this regex."
                            }
                          }
                        },
                        "HardwareModuleName": {
                          "type": "object",
                          "description": "If set, the ACME-ADCS server will use this to validate id-on-hardwareModuleName [RFC4108]. Since serial numbers are byte arrays, the ACME-ADCS server will consider all serial numbers as valid.",
                          "properties": {
                            "ValidTypeRegex": {
                              "type": [ "string", "null" ],
                              "description": "Hardware module names will be considered valid if they match the following regular expression."
                            }
                          }
                        },
                        "PrincipalName": {
                          "type": "object",
                          "description": "If set, the ACME-ADCS server will use this to validate id-on-userPrincipalName [RFC8226].",
                          "properties": {
                            "ValidationRegex": {
                              "type": [ "string", "null" ],
                              "description": "Principal names will be considered valid if they match the following regular expression."
                            }
                          }
                        },
                        "IgnoredTypes": {
                          "type": "array",
                          "description": "OtherName types that are not explicitly handled by the ACME-ADCS server will be considered valid if their type is in this list. The value of the type cannot be validated explicitly. To specifically handle types that are not listed here, use the 'RemoteValidationUrl' in the CSR validation parameters.",
                          "items": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": [
            "SupportedIdentifiers",
            "ADCSOptions"
          ]
        }
      }
    },
    "Logging": {
      "type": "object"
    },
    "AllowedHosts": {
      "type": "string"
    },
    "ForwarededHeaders": {
      "type": "object",
      "properties": {
        "KnownNetworks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "KnownProxies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "required": [
    "AcmeFileStore",
    "Profiles"
  ]
}