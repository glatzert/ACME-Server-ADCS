{
  // This file is for reference only.

  // [Optional, Highly Recommended] https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging/#configure-logging
  "Logging": {
    "EnableHttpLogging": false, // allows you to log http requests with asp.net core (handle with care)
    "EnableFileLog": true, // enables logging into a file
    "PathFormat": "C:\\ACME-ADCS\\Logs\\{Date}.json", // Set the filename of the logfile
    "Json": true, // if true logging will produce on json object per line.

    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Warning"
    }
  },

  // https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/kestrel#host-filtering
  "AllowedHosts": "*",

  // [Optional] If you use a load balancer, that has another public dns name than your application server, you might need to activate forwarded headers.
  // We're using AspNetCore's ForwardedHeaders Middleware to support this: https://learn.microsoft.com/en-us/aspnet/core/host-and-deploy/proxy-load-balancer?view=aspnetcore-8.0#forwarded-headers-middleware-options
  "ForwardedHeaders": {
    "KnownNetworks": [],
    "KnownProxies": ["127.0.0.1"]
  },


  // If you run the software in a windows service, you'll need to configure Kestrel (the AspNetCore WebServer) directly.
  // see https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/kestrel#endpoint-configuration for further informations.
  "Kestrel": {
    /// ...
  },

  // The ACME Server configuration - questions? See https://github.com/glatzert/ACME-Server-ADCS/
  "AcmeServer": {
    "HostedWorkers": {
      "ValidationCheckInterval": 60, // In Seconds. Challenge validation will check for work after this period.
      "IssuanceCheckInterval": 60 // In Seconds. Certificate Issuance will check for work after this period.
    },

    // [Optional] This url is included in the metadata - it's for humans to read.
    "WebsiteUrl": "https://my-custom.site",

    // [Optional] Terms of Service (TOS) - this is included in the ACME-Metadata.
    "TOS": {

      // [Optional] For internal use most likely 'false'
      "RequireAgreement": false,

      // [Optional] The TOS-URL is included in the ACME-Metadata and error messages.
      "Url": "https://my-custom.tos", // Included in ACME-Metadata

      // [Optional] TOS-Agreement is time-based and must be repeated, if TOS changes.
      "LastUpdate": "2020-01-23"
    },


    // [Optional] The ACME-Server supports external account binding (EAB) - this is included in the ACME-Metadata.
    // if this section exists, the ACME-Server will configure itself to support EAB.
    "ExternalAccountBinding": {

      // [Required] If false, EAB is optional for account creation.
      "Required": true,

      // [Required] Url to retrieve the MAC-key for given {kid}
      "MACRetrievalUrl": "https://myEABService.example.com/mac/{kid}",

      // [Optional] Url to signal successful EAB check
      "SuccessSignalUrl": "https://myEABService.example.com/success/{kid}",

      // [Optional] Url to signal failed EAB check
      "FailedSignalUrl": "https://myEABService.example.com/failed/{kid}",

      // [Optional] Http-Headers to be sent to the MAC related URLs
      "Headers": [
        {
          "Key": "Authorization",
          "Value": "ApiKey TrustmeBro"
        }
      ]
    }
  },


  // [Required] Issuance profile configuration - there's no default profile, you must define at least one.
  "Profiles": {

    // The profile name is used to identify the profile in the ACME-Server.
    "Default-DNS": {

      // [Optional] The validity period of the authorization challenge. The default is one day.
      // After this period, the authorization will be invalid and a new challenge must be requested.
      "AuthorizationValidityPeriod": "23:59:59",

      // [Required] List of supported identifiers for this profile.
      // Possible valies are: dns, ip, permanent-identifier, hardware-module
      "SupportedIdentifiers": [ "dns", "ip" ],

      // [Optional] The following settings are used to validate the identifiers.
      "IdentifierValidation": {

        // [Optional] Configure DNS identifier validation
        "DNS": {

          // [Optional] AllowedDNSNames is used to restrict the DNS names. It's an endsWith case-insensitive match.
          // example.com will allow *.example.com and example.com, .example.com will allow *.example.com but not example.com
          // The default is an empty string - so no restriction.
          "AllowedDNSNames": [ "" ]
        }
      },

      // [Required] The following settings are used to issue the certificate.
      "ADCSOptions": {
        // [Required] The CA-Server to use for certificate issuance.
        "CAServer": "CA.FQDN.com\\CA Name",

        // [Required] The template to use for certificate issuance.
        "TemplateName": "DNS-ACME-Template"
      }
    },

    // A sample for permanent-identifiers
    "Default-Device": {
      "SupportedIdentifiers": [ "permanent-identifier" ],
      "ADCSOptions": {
        "CAServer": "CA.FQDN.com\\CA Name",
        "TemplateName": "Device-ACME-Template"
      }
    }
  },


  // [Required] The ACME-FileStore configuration - this is used to store the ACME-Server data.
  "AcmeFileStore": {
    "BasePath": "C:\\ACME-ADCS\\" // Make sure the path exists and is writeable from the ACME server process identity.
  }
}
